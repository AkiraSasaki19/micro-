;Programacion del ADC para muestrear una seï¿½al analogica con ayuda
;del temporizador.
 
.include "m328pdef.inc"  

 JMP RESET        ;Reset Handler
 JMP EXT_INT0     ;IRQ0 Handler
 JMP EXT_INT1     ;IRQ1 Handler
 JMP PROCPCINT0   ;PCINT0 Handler
 JMP PROCPCINT1   ;PCINT1 Handler
 JMP PROCPCINT2   ;PCINT2 Handler
 JMP WDT          ;Watchdog Timer Handler
 JMP TIM2_COMPA   ;Timer2 Compare A Handler
 JMP TIM2_COMPB   ;Timer2 Compare B Handler
 JMP TIM2_OVF     ;Timer2 Overflow Handler
 JMP TIM1_CAPT    ;Timer1 Capture Handler
 JMP TIM1_COMPA   ;Timer1 Compare A Handler
 JMP TIM1_COMPB   ;Timer1 Compare B Handler
 JMP TIM1_OVF     ;Timer1 Overflow Handler
 JMP TIM0_COMPA   ;Timer0 Compare A Handler
 JMP TIM0_COMPB   ;Timer0 Compare B Handler
 JMP TIM0_OVF     ;Timer0 Overflow Handler
 JMP SPI_STC      ;SPI Transfer Complete Handler
 JMP USART_RXC    ;USART, RX Complete Handler
 JMP USART_UDRE   ;USART, UDR Empty Handler
 JMP USART_TXC    ;USART, TX Complete Handler
 JMP ADCC         ;ADC Conversion Complete Handler
 JMP EE_RDY       ;EEPROM Ready Handler
 JMP ANA_COMP     ;Analog Comparator Handler
 JMP TWI          ;2-wire Serial Interface Handler
 JMP SPM_RDY      ;Store Program Memory Ready Handler

RESET:
  ;Configura la PILA
  LDI R16, HIGH(ramend) 
  OUT SPH, R16 
  LDI R16, LOW(ramend)   
  OUT SPL, R16 

  ;Se va a emplear el bit PC0 como entrada
  ;los demas quedan como salida. Ademas, se
  ;va usar el puerto PC1 como ayuda para
  ;ver en funcionamiento del temporizador.
  LDI R16, 0xFE
  OUT DDRC, R16
  ;Dado que la resolucion del ADC es de 10 bits, 
  ;usaremos los puertos D y B como salidas en donde,
  ;el puerto D se usa completo y los 2 bits menos
  ;significativos del puerto B. 
  LDI R16, 0xFF
  OUT DDRD, R16
  LDI R16, 0x03
  OUT DDRB, R16

  ;Se emplea como bandera para saber la frecuencia de muestreo
  LDI R20, 0b00000010

  ;Configuracion del ADC
  LDI R16, 0b01000000
  STS ADMUX, R16
  LDI R16, 0b10000000
  STS ADCSRA, R16
  LDI R16, 0b00000000
  STS ADCSRB, R16

  ;Ahora configuramos el temporizador para tomar muestras
  ;COM1A = COM1B = 0. Modo normal sin usar las salidas OC1A y 0C1B
  ;WGM1 = 1000 Modo PWM se considera TOP con el registro ICR1.
  ;CS1 = 010 Escalamiento.
  ;Todos los demas bits son cero.
  LDI R16, 0b00000000
  STS TCCR1A, R16
  LDI R16, 0b00010010
  STS TCCR1B, R16
  LDI R16, 0b00000000
  STS TCCR1C, R16

 ;Definimos el TOP en el registro ICR (0064H)
 	LDI R16, 0x00
	STS ICR1H, R16
	LDI R16, 0x64
	STS ICR1L, R16

  ;R21 es una "variable global" para la interrupcion
  ;por sobreflujo.
  LDI R21, 0b00000000

  ;Activamos la IOV
	CLI
  ;Interrupcion por sobreflujo del temporizador.
	LDI R16, 0b00000001
  STS TIMSK1, R16
	SEI

  ;Ciclo "sin fin", mantiene ocupado al procesador
  ;auncuando "no hace nada"
SIN_FIN:
  NOP
  NOP
	JMP SIN_FIN
  
;Seccion de todas las interrupciones
EXT_INT0:
EXT_INT1:
PROCPCINT0:
PROCPCINT1:
PROCPCINT2:
WDT:
TIM2_COMPA:
TIM2_COMPB:
TIM2_OVF:
TIM1_CAPT:
TIM1_COMPA:
TIM1_COMPB:
  RETI
TIM1_OVF:
  ;Cada que se llame a la interrupcion se toma la muestra
  ;y encendemos y apagamos el puerto PD1
  PUSH R16
  PUSH R17
  COM R21
  ANDI R21, 0b00000010
  OR R20, R21
  OUT PORTC, R20
  COM R20
  ANDI R20, 0b00000010
  LDI R16, 0b11000000
  STS ADCSRA, R16
  ;Ahora esperamos a que termine
NOHATERMINADOADC:
  LDS R16, ADCSRA
  ANDI R16, 0b01000000
  BRNE NOHATERMINADOADC
  ;Termino el resultado estara en el registro ADC
  ;Enviamos los datos a los puertos B y D
  LDS R16, ADCL
  OUT PORTD, R16
  LDS R17, ADCH
  OUT PORTB, R17
  POP R17
  POP R16
  RETI
TIM0_COMPA:
TIM0_COMPB:
TIM0_OVF:
SPI_STC:
USART_RXC:
USART_UDRE:
USART_TXC:
ADCC:
EE_RDY:
ANA_COMP:
TWI:
SPM_RDY:
  RETI
